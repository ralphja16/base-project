@charset "UTF-8";

/* =============================================================================
  CONFIG
============================================================================= */

$mq-base-font-size:     16px !default;
$ieSprite:              '.lt-ie9' !default;
$sprite:                map-get($icons, sprite) !default;



/* =============================================================================
FUNCTION: CONVERT PX TO EMS
USEAGE: mq-px2em(32px); 
REFERENCE: 
============================================================================= */

@function mq-px2em($px, $base-font-size: $mq-base-font-size) {
    @if unitless($px) {
        @warn "Assuming #{$px} to be in pixels, attempting to convert it into pixels.";
        @return mq-px2em($px + 0px); // That may fail.
    } @else if unit($px) == em {
        @return $px;
    }
    @return ($px / $base-font-size) * 1em;
}


/* =============================================================================
FUNCTION: RETRIVE AN ATTR VALUE FOR A SPECIFIC ICON IN THE SPRITE MAP
USEAGE: sprite-attr(); 
REFERENCE: 
============================================================================= */

@function sprite-attr($icon, $attr) {
	$newIcon: map-get($icons, $icon);
	@if $newIcon == null {
		@warn "Can't find an icon with the name #{$icon}";
	}
	@return map-get($newIcon, $attr);
}

/* =============================================================================
FUNCTION: CREATE A MAP WITH SPECIFIED ICON OF ATTR
USEAGE: icon-attr(); 
REFERENCE: 
============================================================================= */

@function icon-attr($icon) {
	$attr: (
		width: sprite-attr($icon, width),
		height: sprite-attr($icon, height),
		x: sprite-attr($icon, backgroundX),
		y: sprite-attr($icon, backgroundY)
	);

	@return $attr;
}


/* =============================================================================
FUNCTION: GET WIDTH OF AN ICON IN EM
USEAGE: icon_width(); 
REFERENCE: 
============================================================================= */

@function icon_width($icon) {
	@return mq-px2em(sprite-attr($icon, width));
}


/* =============================================================================
FUNCTION: GET THE HEIGHT OF AN ICON IN EM
USEAGE: icon_height(); 
REFERENCE: 
============================================================================= */

@function icon_height($icon) {
	@return mq-px2em(sprite-attr($icon, height));
}

/// Assign the correct SVG background image and dimensions to the element
%sprite {
	display: inline-block;
	background-image: url(map-get($sprite, svgPath));
	background-size: mq-px2em(map-get($sprite, width)) mq-px2em(map-get($sprite, height));
}
/// Assign the correct PNG background image and dimensions to the element
%ie-sprite {
	 background-image: url(map-get($sprite, pngPath));
}